{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u0438\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\\\\9\\\\9.2.3\\\\time\\\\src\\\\components\\\\DateTimePretty.js\";\n// src/components/DateTimePretty.js\nimport React from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withFormattedDate = Component => {\n  return function WrappedComponent(props) {\n    const now = moment();\n    const publishedDate = moment(props.date);\n    const diffMinutes = now.diff(publishedDate, 'minutes');\n    const diffHours = now.diff(publishedDate, 'hours');\n    let formattedDate;\n    if (diffMinutes < 60) {\n      formattedDate = `${diffMinutes} минут назад`;\n    } else if (diffHours < 24) {\n      formattedDate = `${diffHours} часов назад`;\n    } else {\n      const diffDays = now.diff(publishedDate, 'days');\n      formattedDate = `${diffDays} дней назад`;\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      date: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this);\n  };\n};\nexport default withFormattedDate;","map":{"version":3,"names":["React","moment","jsxDEV","_jsxDEV","withFormattedDate","Component","WrappedComponent","props","now","publishedDate","date","diffMinutes","diff","diffHours","formattedDate","diffDays","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Домашние работы/9/9.2.3/time/src/components/DateTimePretty.js"],"sourcesContent":["   // src/components/DateTimePretty.js\r\n   import React from 'react';\r\n   import moment from 'moment';\r\n\r\n   const withFormattedDate = (Component) => {\r\n     return function WrappedComponent(props) {\r\n       const now = moment();\r\n       const publishedDate = moment(props.date);\r\n       const diffMinutes = now.diff(publishedDate, 'minutes');\r\n       const diffHours = now.diff(publishedDate, 'hours');\r\n\r\n       let formattedDate;\r\n       if (diffMinutes < 60) {\r\n         formattedDate = `${diffMinutes} минут назад`;\r\n       } else if (diffHours < 24) {\r\n         formattedDate = `${diffHours} часов назад`;\r\n       } else {\r\n         const diffDays = now.diff(publishedDate, 'days');\r\n         formattedDate = `${diffDays} дней назад`;\r\n       }\r\n\r\n       return <Component {...props} date={formattedDate} />;\r\n     };\r\n   };\r\n\r\n   export default withFormattedDate;"],"mappings":";AAAG;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;EACvC,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAE;IACtC,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC;IACpB,MAAMQ,aAAa,GAAGR,MAAM,CAACM,KAAK,CAACG,IAAI,CAAC;IACxC,MAAMC,WAAW,GAAGH,GAAG,CAACI,IAAI,CAACH,aAAa,EAAE,SAAS,CAAC;IACtD,MAAMI,SAAS,GAAGL,GAAG,CAACI,IAAI,CAACH,aAAa,EAAE,OAAO,CAAC;IAElD,IAAIK,aAAa;IACjB,IAAIH,WAAW,GAAG,EAAE,EAAE;MACpBG,aAAa,GAAG,GAAGH,WAAW,cAAc;IAC9C,CAAC,MAAM,IAAIE,SAAS,GAAG,EAAE,EAAE;MACzBC,aAAa,GAAG,GAAGD,SAAS,cAAc;IAC5C,CAAC,MAAM;MACL,MAAME,QAAQ,GAAGP,GAAG,CAACI,IAAI,CAACH,aAAa,EAAE,MAAM,CAAC;MAChDK,aAAa,GAAG,GAAGC,QAAQ,aAAa;IAC1C;IAEA,oBAAOZ,OAAA,CAACE,SAAS;MAAA,GAAKE,KAAK;MAAEG,IAAI,EAAEI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtD,CAAC;AACH,CAAC;AAED,eAAef,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}